group 'com.luo'
apply plugin: 'java'

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse-wtp'
    repositories {
        mavenCentral()
    }
    dependencies {
        implementation 'junit:junit:4.11'
    }
    version = '1.0-SNAPSHOT'
    jar {
        manifest.attributes provider: 'gradle'
    }
}

//project(':shared') {
//    task hello
//}
//task hello
//println tasks.getByPath('hello').path
//println tasks.getByPath('hello').path
//println tasks.getByPath('shared:hello').path
//println tasks.getByPath(':shared:hello').path

//project('api') {
//    task taskX(dependsOn: ':shared:taskY') {
//        doLast {
//            println 'taskX'
//        }
//    }
//}
//project('shared') {
//    task taskY {
//        doLast {
//            println 'taskY'
//        }
//    }
//}

//task taskX {
//    doLast {
//        println 'taskX'
//    }
//}
//task taskY {
//    doLast {
//        println 'taskY'
//    }
//}
//taskX.dependsOn taskY

//task taskX {
//    doLast {
//        println 'taskX'
//    }
//}
//taskX.dependsOn {
//    tasks.findAll { task -> task.name.startsWith('lib') }
//}
//task lib1 {
//    doLast {
//        println 'lib1'
//    }
//}
//task lib2 {
//    doLast {
//        println 'lib2'
//    }
//}
//task notALib {
//    doLast {
//        println 'notALib'
//    }
//}

//task taskX {
//    doLast {
//        println 'taskX'
//    }
//}
//task taskY {
//    doLast {
//        println 'taskY'
//    }
//}
//taskY.mustRunAfter  taskX

//task taskX {
//    doLast {
//        println 'taskX'
//    }
//}
//task taskY {
//    doLast {
//        println 'taskY'
//    }
//}
//task taskZ {
//    doLast {
//        println 'taskZ'
//    }
//}
//taskX.dependsOn taskY
//taskY.dependsOn taskZ
//taskZ.shouldRunAfter taskX

//task copy(type: Copy) {
//    description 'Copies the resource directory to the target directory.'
//    from 'resources'
//    into 'target'
//    include('**/*.txt', '**/*.xml', '**/*.properties')
//}

// gradle hello -PskipHello
//task hello {
//    doLast {
//        println 'hello world'
//    }
//}
//hello.onlyIf { !project.hasProperty('skipHello') }

//task compile {
//    doLast {
//        println 'We are doing the compile.'
//    }
//}
//compile.doFirst {
//    // Here you would put arbitrary conditions in real life. But we use this as an integration test, so we want defined behavior.
//    if (true) { throw new StopExecutionException() }
//}
//task myTask(dependsOn: 'compile') {
//    doLast {
//        println 'I am not affected'
//    }
//}

//task disableMe {
//    doLast {
//        println 'This should not be printed if the task is disabled.'
//    }
//}
//disableMe.enabled = false

//tasks.addRule("Pattern: ping<ID>") { String taskName ->
//    if (taskName.startsWith("ping")) {
//        task(taskName) {
//            doLast {
//                println "Pinging: " + (taskName - 'ping')
//            }
//        }
//    }
//}
//
//task groupPing {
//    dependsOn pingServer1, pingServer2
//}

//task taskX {
//    doLast {
//        if (true) {
//            println 'taskX failed'
//            throw new StopExecutionException()
//        }
//        println 'taskX successed'
//    }
//}
//task taskY {
//    doLast {
//        println 'taskY'
//    }
//}
//
//taskY.dependsOn taskX